{"ast":null,"code":"var _jsxFileName = \"D:\\\\simacc_portal\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Import Bootstrap components\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\n// Import the reusable feedback components\nimport ErrorMessage from '../components/ErrorMessage';\nimport SuccessMessage from '../components/SuccessMessage';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\n// Import useNavigate from react-router-dom for redirection\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  // --- State Variables ---\n  // State for input fields\n  const [accountNumber, setAccountNumber] = useState('');\n  const [otp, setOtp] = useState(''); // State for the entered OTP\n\n  // State to track the stage of the login process\n  const [otpSent, setOtpSent] = useState(false); // True after OTP request is successful\n\n  // State for feedback (loading, error, success)\n  const [isLoading, setIsLoading] = useState(false); // Controls spinner and form visibility\n  const [error, setError] = useState(null); // Holds error message text\n  const [successMessage, setSuccessMessage] = useState(null); // Holds success message text\n\n  // --- React Router Hook ---\n  // Get the navigate function for redirection\n  const navigate = useNavigate();\n\n  // --- Input Change Handlers ---\n  // Updates state when account number input changes\n  const handleAccountNumberChange = event => {\n    setAccountNumber(event.target.value);\n    // Optionally clear feedback when input changes\n    setError(null);\n    setSuccessMessage(null);\n  };\n\n  // Updates state when OTP input changes\n  const handleOtpChange = event => {\n    setOtp(event.target.value);\n    // Optionally clear feedback when input changes\n    setError(null);\n    setSuccessMessage(null);\n  };\n\n  // --- Form Submission Handler ---\n  // This function handles submission for BOTH stages\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent the default browser page reload\n\n    setIsLoading(true); // Start loading for the current stage\n    setError(null); // Clear previous errors\n    setSuccessMessage(null); // Clear previous success messages\n\n    try {\n      if (!otpSent) {\n        // --- STAGE 1: REQUEST OTP ---\n        console.log(`Simulating OTP request for account number: ${accountNumber}`);\n        // *** Simulate an API call delay ***\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\n\n        // *** Simulate API response for OTP request (hardcoded) ***\n        let apiResponse;\n        if (accountNumber === '0786399754' || accountNumber.toLowerCase() === 'colleen') {\n          // Case-insensitive check for 'colleen'\n          apiResponse = {\n            success: true,\n            message: 'OTP sent to your registered phone/email!'\n          };\n        } else {\n          apiResponse = {\n            success: false,\n            message: 'Account number not found.'\n          };\n        }\n        // *** End of simulation for OTP request ***\n\n        if (apiResponse.success) {\n          setSuccessMessage(apiResponse.message);\n          setOtpSent(true); // Move to the OTP verification stage\n          setOtp(''); // Clear OTP field for new input\n        } else {\n          setError(apiResponse.message);\n        }\n      } else {\n        // --- STAGE 2: VERIFY OTP ---\n        console.log(`Simulating OTP verification for account ${accountNumber}: ${otp}`);\n        // *** Simulate an API call delay ***\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\n\n        // *** Simulate API response for OTP verification (hardcoded OTP: '1234') ***\n        let apiResponse;\n        if (otp === '1234') {\n          // Hardcoded OTP for simulation\n          apiResponse = {\n            success: true,\n            message: 'OTP verified! Logging in...'\n          };\n        } else {\n          apiResponse = {\n            success: false,\n            message: 'Invalid OTP. Please try again.'\n          };\n        }\n        // *** End of simulation for OTP verification ***\n\n        if (apiResponse.success) {\n          setSuccessMessage(apiResponse.message);\n          setError(null); // Clear any previous error\n          navigate('/dashboard'); // Redirect to dashboard\n        } else {\n          setError(apiResponse.message);\n        }\n      }\n    } catch (err) {\n      // Handle unexpected errors during the simulation (e.g., if Promise.reject was used)\n      console.error('Simulation Error:', err);\n      setError('An unexpected error occurred during the process simulation.');\n      setSuccessMessage(null); // Clear success message on error\n    } finally {\n      setIsLoading(false); // Stop loading regardless of outcome\n    }\n  };\n\n  // --- Component JSX (What gets rendered) ---\n  return (\n    /*#__PURE__*/\n    // Outer Container to center the card\n    _jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-4 shadow-lg rounded\",\n        style: {\n          width: '25rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            message: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n            message: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 30\n          }, this), !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-center mb-4\",\n              children: [otpSent ? 'Verify OTP' : 'SimAcc Portal Login', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [!otpSent ?\n              /*#__PURE__*/\n              // --- Render Account Number form if OTP not sent ---\n              _jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"formBasicAccountNumber\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Account Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter your account number or phone (e.g., 0786399754)\",\n                    value: accountNumber,\n                    onChange: handleAccountNumberChange,\n                    required: true,\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  className: \"w-100 mt-3\",\n                  disabled: isLoading,\n                  children: \"Request OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) :\n              /*#__PURE__*/\n              // --- Render OTP verification form if OTP sent ---\n              _jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted text-center mb-3\",\n                  children: [\"An OTP has been sent to your registered phone number or email linked to \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 97\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fw-bold\",\n                    children: accountNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this), \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"formBasicOtp\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Enter OTP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter the 4-digit OTP\",\n                    value: otp,\n                    onChange: handleOtpChange,\n                    required: true,\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  type: \"submit\",\n                  className: \"w-100 mt-3\",\n                  disabled: isLoading,\n                  children: \"Verify OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\" // Makes the button look like a link (Bootstrap utility)\n                    ,\n                    onClick: e => {\n                      e.preventDefault();\n                      console.log('Simulating Resend OTP clicked for account:', accountNumber);\n                      setError(null);\n                      setSuccessMessage('Resending OTP...');\n                      setIsLoading(true);\n                      // Simulate resend delay\n                      setTimeout(() => {\n                        setSuccessMessage('New OTP sent!');\n                        setIsLoading(false);\n                      }, 1000);\n                    },\n                    className: \"text-primary text-decoration-none\",\n                    children: \"Resend OTP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted mb-1\",\n                  children: !otpSent ? \"Don't have an account?\" : \"Need help logging in?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/register\",\n                  className: \"text-primary text-decoration-none\",\n                  children: !otpSent ? \"Create Account\" : \"Contact Support\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(LoginPage, \"W+WyfqFJ7V9XpiXETOJx6Nt4Bpg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Container","Form","Button","Card","ErrorMessage","SuccessMessage","LoadingSpinner","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","accountNumber","setAccountNumber","otp","setOtp","otpSent","setOtpSent","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","navigate","handleAccountNumberChange","event","target","value","handleOtpChange","handleSubmit","preventDefault","console","log","Promise","resolve","setTimeout","apiResponse","toLowerCase","success","message","err","className","style","minHeight","children","width","Body","fileName","_jsxFileName","lineNumber","columnNumber","Title","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","required","disabled","variant","onClick","e","href","_c","$RefreshReg$"],"sources":["D:/simacc_portal/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// Import Bootstrap components\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// Import the reusable feedback components\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport SuccessMessage from '../components/SuccessMessage';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\n// Import useNavigate from react-router-dom for redirection\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n  // --- State Variables ---\r\n  // State for input fields\r\n  const [accountNumber, setAccountNumber] = useState('');\r\n  const [otp, setOtp] = useState(''); // State for the entered OTP\r\n\r\n  // State to track the stage of the login process\r\n  const [otpSent, setOtpSent] = useState(false); // True after OTP request is successful\r\n\r\n  // State for feedback (loading, error, success)\r\n  const [isLoading, setIsLoading] = useState(false); // Controls spinner and form visibility\r\n  const [error, setError] = useState(null); // Holds error message text\r\n  const [successMessage, setSuccessMessage] = useState(null); // Holds success message text\r\n\r\n  // --- React Router Hook ---\r\n  // Get the navigate function for redirection\r\n  const navigate = useNavigate();\r\n\r\n  // --- Input Change Handlers ---\r\n  // Updates state when account number input changes\r\n  const handleAccountNumberChange = (event) => {\r\n    setAccountNumber(event.target.value);\r\n    // Optionally clear feedback when input changes\r\n    setError(null);\r\n    setSuccessMessage(null);\r\n  };\r\n\r\n  // Updates state when OTP input changes\r\n  const handleOtpChange = (event) => {\r\n    setOtp(event.target.value);\r\n    // Optionally clear feedback when input changes\r\n    setError(null);\r\n    setSuccessMessage(null);\r\n  };\r\n\r\n  // --- Form Submission Handler ---\r\n  // This function handles submission for BOTH stages\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Prevent the default browser page reload\r\n\r\n    setIsLoading(true); // Start loading for the current stage\r\n    setError(null); // Clear previous errors\r\n    setSuccessMessage(null); // Clear previous success messages\r\n\r\n    try {\r\n      if (!otpSent) { // --- STAGE 1: REQUEST OTP ---\r\n        console.log(`Simulating OTP request for account number: ${accountNumber}`);\r\n        // *** Simulate an API call delay ***\r\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\r\n\r\n        // *** Simulate API response for OTP request (hardcoded) ***\r\n        let apiResponse;\r\n        if (accountNumber === '0786399754' || accountNumber.toLowerCase() === 'colleen') { // Case-insensitive check for 'colleen'\r\n           apiResponse = { success: true, message: 'OTP sent to your registered phone/email!' };\r\n        } else {\r\n           apiResponse = { success: false, message: 'Account number not found.' };\r\n        }\r\n        // *** End of simulation for OTP request ***\r\n\r\n        if (apiResponse.success) {\r\n          setSuccessMessage(apiResponse.message);\r\n          setOtpSent(true); // Move to the OTP verification stage\r\n          setOtp(''); // Clear OTP field for new input\r\n        } else {\r\n          setError(apiResponse.message);\r\n        }\r\n\r\n      } else { // --- STAGE 2: VERIFY OTP ---\r\n        console.log(`Simulating OTP verification for account ${accountNumber}: ${otp}`);\r\n        // *** Simulate an API call delay ***\r\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\r\n\r\n        // *** Simulate API response for OTP verification (hardcoded OTP: '1234') ***\r\n        let apiResponse;\r\n        if (otp === '1234') { // Hardcoded OTP for simulation\r\n          apiResponse = { success: true, message: 'OTP verified! Logging in...' };\r\n        } else {\r\n          apiResponse = { success: false, message: 'Invalid OTP. Please try again.' };\r\n        }\r\n        // *** End of simulation for OTP verification ***\r\n\r\n        if (apiResponse.success) {\r\n          setSuccessMessage(apiResponse.message);\r\n          setError(null); // Clear any previous error\r\n          navigate('/dashboard'); // Redirect to dashboard\r\n\r\n        } else {\r\n          setError(apiResponse.message);\r\n        }\r\n      }\r\n\r\n    } catch (err) {\r\n      // Handle unexpected errors during the simulation (e.g., if Promise.reject was used)\r\n      console.error('Simulation Error:', err);\r\n      setError('An unexpected error occurred during the process simulation.');\r\n      setSuccessMessage(null); // Clear success message on error\r\n    } finally {\r\n      setIsLoading(false); // Stop loading regardless of outcome\r\n    }\r\n  };\r\n\r\n  // --- Component JSX (What gets rendered) ---\r\n  return (\r\n    // Outer Container to center the card\r\n    <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '80vh' }}>\r\n      {/* The Card component */}\r\n      <Card className=\"p-4 shadow-lg rounded\" style={{ width: '25rem' }}>\r\n        <Card.Body>\r\n          {/* --- Feedback (Spinner, Error, Success) --- */}\r\n          {/* Show spinner when isLoading is true */}\r\n          {isLoading && <LoadingSpinner />}\r\n          {/* Show error message when there is an error */}\r\n          {error && <ErrorMessage message={error} />}\r\n          {/* Show success message when there is a success message */}\r\n          {successMessage && <SuccessMessage message={successMessage} />}\r\n\r\n          {/* --- Form Content (Conditional based on stage) --- */}\r\n          {/* Show the appropriate form only when not loading */}\r\n          {!isLoading && (\r\n            <> {/* Use a React Fragment to group multiple elements */}\r\n              {/* Card Title - Adjust based on stage */}\r\n              <Card.Title className=\"text-center mb-4\">\r\n                {otpSent ? 'Verify OTP' : 'SimAcc Portal Login'} {/* Title changes based on stage */}\r\n              </Card.Title>\r\n\r\n              {/* The Form */}\r\n              <Form onSubmit={handleSubmit}>\r\n\r\n                {!otpSent ? ( // --- Render Account Number form if OTP not sent ---\r\n                  <>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicAccountNumber\">\r\n                      <Form.Label>Account Number</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your account number or phone (e.g., 0786399754)\"\r\n                        value={accountNumber}\r\n                        onChange={handleAccountNumberChange}\r\n                        required\r\n                        disabled={isLoading}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"w-100 mt-3\"\r\n                      disabled={isLoading}\r\n                    >\r\n                      Request OTP\r\n                    </Button>\r\n                  </>\r\n                ) : ( // --- Render OTP verification form if OTP sent ---\r\n                  <>\r\n                     <p className=\"text-muted text-center mb-3\">\r\n                        An OTP has been sent to your registered phone number or email linked to <br/>\r\n                        <span className=\"fw-bold\">{accountNumber}</span>.\r\n                     </p>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicOtp\">\r\n                      <Form.Label>Enter OTP</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter the 4-digit OTP\"\r\n                        value={otp}\r\n                        onChange={handleOtpChange}\r\n                        required\r\n                        disabled={isLoading}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                      variant=\"success\"\r\n                      type=\"submit\"\r\n                      className=\"w-100 mt-3\"\r\n                      disabled={isLoading}\r\n                    >\r\n                      Verify OTP\r\n                    </Button>\r\n\r\n                    {/* Option to Resend OTP (simulated) */}\r\n                     <div className=\"text-center mt-3\">\r\n\r\n                         <Button\r\n                             variant=\"link\" // Makes the button look like a link (Bootstrap utility)\r\n                             onClick={(e) => {\r\n                        \r\n                             e.preventDefault();\r\n                             console.log('Simulating Resend OTP clicked for account:', accountNumber);\r\n                             setError(null);\r\n                             setSuccessMessage('Resending OTP...');\r\n                             setIsLoading(true);\r\n                             // Simulate resend delay\r\n                             setTimeout(() => {\r\n                                 setSuccessMessage('New OTP sent!');\r\n                                 setIsLoading(false);\r\n                             }, 1000);\r\n                         }} className=\"text-primary text-decoration-none\">\r\n                             Resend OTP\r\n                             </Button>\r\n                        \r\n                     </div>\r\n                  </>\r\n                )}\r\n\r\n                {/* Link for Account Creation (remains at the bottom) */}\r\n                <div className=\"text-center mt-3\">\r\n                  <p className=\"text-muted mb-1\">{!otpSent ? \"Don't have an account?\" : \"Need help logging in?\"}</p>\r\n                  <a href=\"/register\" className=\"text-primary text-decoration-none\">\r\n                    {!otpSent ? \"Create Account\" : \"Contact Support\"}\r\n                  </a>\r\n                </div>\r\n\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}